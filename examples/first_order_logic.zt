[
  FirstOrderStructure ≔
    [Prop, ⊢, X] ↦
      {
        ⊥ : Prop,
        ¬ : [_ : Prop] → Prop,
        ∧ : [_ : Prop, _ : Prop] → Prop,
        ∨ : [_ : Prop, _ : Prop] → Prop,
        ⇒ : [_ : Prop, _ : Prop] → Prop,
        ⇔ : [_ : Prop, _ : Prop] → Prop,
        ∀ : [_ : [_ : X] → Prop] → Prop,
        ∃ : [_ : [_ : X] → Prop] → Prop,
        ⊥elim : [c : Prop, _ : ⊢ ⊥] → ⊢ c,
        ¬intro : [p : Prop, _ : [_ : ⊢ p] → ⊢ ⊥] → ⊢ (¬ p),
        contra : [p : Prop, _ : [_ : ⊢ (¬ p)] → ⊢ ⊥] → ⊢ p,
        ¬elim : [p : Prop, _ : ⊢ (¬ p), _ : ⊢ p] → ⊢ ⊥,
        ∧intro : [p : Prop, q : Prop, _ : ⊢ p, _ : ⊢ q] → ⊢ (p.∧ q),
        ∧left : [p : Prop, q : Prop, _ : ⊢ (p.∧ q)] → ⊢ p,
        ∧right : [p : Prop, q : Prop, _ : ⊢ (p.∧ q)] → ⊢ q,
        ∨inl : [p : Prop, q : Prop, _ : ⊢ p] → ⊢ (p.∨ q),
        ∨inr : [p : Prop, q : Prop, _ : ⊢ q] → ⊢ (p.∨ q),
        ∨elim : [p : Prop, q : Prop, c : Prop, _ : ⊢ (p.∨ q), _ : [_ : ⊢ p] → ⊢ c, _ : [_ : ⊢ q] → ⊢ c] → ⊢ c,
        ⇒intro : [p : Prop, q : Prop, _ : [_ : ⊢ p] → ⊢ q] → ⊢ (p.⇒ q),
        ⇒elim : [p : Prop, q : Prop, _ : ⊢ (p.⇒ q), _ : ⊢ p] → ⊢ q,
        ⇔intro : [p : Prop, q : Prop, _ : [_ : ⊢ p] → ⊢ q, _ : [_ : ⊢ q] → ⊢ p] → ⊢ (p.⇔ q),
        ⇔left : [p : Prop, q : Prop, _ : ⊢ (p.⇔ q), _ : ⊢ q] → ⊢ p,
        ⇔right : [p : Prop, q : Prop, _ : ⊢ (p.⇔ q), _ : ⊢ p] → ⊢ q,
        ∀intro : [p : [_ : X] → Prop, _ : [x : X] → ⊢ (p x)] → ⊢ (∀ p),
        ∀elim : [p : [_ : X] → Prop, _ : ⊢ (∀ p), x : X] → ⊢ (p x),
        ∃intro : [p : [_ : X] → Prop, x : X, _ : ⊢ (p x)] → ⊢ (∃ p),
        ∃elim : [p : [_ : X] → Prop, c : Prop, _ : ⊢ (∃ p), _ : [x : X, _ : ⊢ (p x)] → ⊢ c] → ⊢ c
      }
    :
      [Prop : Type, ⊢ : [_ : Prop] → Type, X : Type] → Type
]
(
  [Prop, ⊢, X, _] ↦
    {
      not-or-iff-and-not ≔
        ([p, q] ↦ ⇔intro (¬ (p.∨ q)) ((¬ p).∧ (¬ q))
          ([h] ↦ ∧intro (¬ p) (¬ q)
            (¬intro p ([hp] ↦ ¬elim (p.∨ q) h (∨inl p q hp)))
            (¬intro q ([hq] ↦ ¬elim (p.∨ q) h (∨inr p q hq))))
          ([h] ↦ ¬intro (p.∨ q)
            ([hpq] ↦ ∨elim p q ⊥ hpq
              ([hp] ↦ ¬elim p (∧left (¬ p) (¬ q) h) hp)
              ([hq] ↦ ¬elim q (∧right (¬ p) (¬ q) h) hq)))),
      
      not-exists-iff-forall-not ≔
        ([p] ↦ ⇔intro (¬ (∃ ([x] ↦ p x))) (∀ ([x] ↦ ¬ (p x)))
          ([h] ↦ ∀intro ([x] ↦ ¬ (p x))
            ([x] ↦ ¬intro (p x)
              ([hp] ↦ ¬elim (∃ ([x] ↦ p x)) h (∃intro ([x] ↦ p x) x hp))))
          ([h] ↦ ¬intro (∃ ([x] ↦ p x))
            ([hp] ↦ ∃elim ([x] ↦ p x) ⊥ hp
              ([x, hx] ↦ ¬elim (p x) (∀elim ([x] ↦ ¬ (p x)) h x) hx))))
    }
  :
    [Prop : Type, ⊢ : [_ : Prop] → Type, X : Type, _ : FirstOrderStructure Prop ⊢ X] →
      {
        not-or-iff-and-not : [p : Prop, q : Prop] → ⊢ ((¬ (p.∨ q)).⇔ ((¬ p).∧ (¬ q))),
        not-exists-iff-forall-not : [p : [_ : X] → Prop] → ⊢ ((¬ (∃ ([x] ↦ p x))).⇔ (∀ ([x] ↦ ¬ (p x))))
      }
)
